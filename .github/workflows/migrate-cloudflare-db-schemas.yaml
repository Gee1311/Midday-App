name: Cloudflare D1 Database Migration

on:
  push:
    branches: [ main ]
    paths:
      - services/financial-service/**
  pull_request:
    branches: [ main ]
    paths:
      - services/financial-service/**
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to run migrations (staging or production)'
        required: true
        default: 'staging'

env:
  CLOUDFLARE_API_TOKEN: ${{ secrets.CF_API_TOKEN }}
  CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CF_ACCOUNT_ID }}
  TIPTAP_PRO_TOKEN: ${{ secrets.TIPTAP_PRO_TOKEN }}
  SOLOMON_AI_TOKEN: ${{ secrets.SOLOMON_AI_TOKEN }}

jobs:
  migrate:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3

    - name: Setup Bun
      uses: oven-sh/setup-bun@v1
      with:
        bun-version: latest

    - name: Install dependencies
      run: bun install
      working-directory: ./services/financial-service

    - name: Install Wrangler
      run: bun add -g wrangler

    - name: Run D1 Database Migrations for Staging
      if: github.event_name != 'workflow_dispatch' || github.event.inputs.environment == 'staging'
      run: bun run migrations:apply-staging
      working-directory: ./services/financial-service

    - name: Run D1 Database Migrations for Production
      if: github.event_name == 'workflow_dispatch' && github.event.inputs.environment == 'production'
      run: bun run migrations:apply-production
      working-directory: ./services/financial-service

    - name: Verify Migration
      run: |
        if [[ "${{ github.event_name }}" == "workflow_dispatch" && "${{ github.event.inputs.environment }}" == "production" ]]; then
          bun run migrations:list-production
        else
          bun run migrations:list-staging
        fi
      working-directory: ./services/financial-service

    - name: Handle Migration Failure
      if: failure()
      run: |
        echo "Migration failed. Please check the logs for more information."
        exit 1